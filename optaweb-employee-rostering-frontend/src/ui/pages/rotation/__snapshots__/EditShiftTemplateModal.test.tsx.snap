// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Edit Shift Template Modal should render correctly when closed 1`] = `
<Modal
  actions={
    Array [
      <Button
        aria-label="Close Modal"
        onClick={[MockFunction]}
        variant="tertiary"
      >
        Trans(i18nKey=close)
      </Button>,
      <Button
        aria-label="Save"
        onClick={[Function]}
      >
        Trans(i18nKey=save)
      </Button>,
    ]
  }
  ariaDescribedById=""
  className=""
  hideTitle={false}
  isLarge={false}
  isOpen={false}
  isSmall={true}
  onClose={[MockFunction]}
  showClose={true}
  title="Trans(i18nKey=createShiftTemplate)"
>
  <Form
    id="modal-element"
    key="0"
    onSubmit={[Function]}
  >
    <InputGroup>
      <Label>
        Trans(i18nKey=spot)
      </Label>
      <TypeaheadSelectInput
        aria-label="Spot"
        emptyText="Trans(i18nKey=selectSpot)"
        onChange={[Function]}
        optionToStringMap={[Function]}
        options={
          Array [
            Object {
              "id": 2,
              "name": "Spot",
              "requiredSkillSet": Array [
                Object {
                  "id": 3,
                  "name": "Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
          ]
        }
      />
    </InputGroup>
    <InputGroup>
      <Label>
        Trans(i18nKey=startDayOffset)
      </Label>
      <TextInput
        aria-label="Start Day Offset"
        className=""
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        max={24}
        min={1}
        onChange={[Function]}
        type="number"
      />
      <Label>
        Trans(i18nKey=startTime)
      </Label>
      <TextInput
        aria-label="Start Time"
        className=""
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        onChange={[Function]}
        type="time"
      />
    </InputGroup>
    <InputGroup>
      <Label>
        Trans(i18nKey=endDayOffset)
      </Label>
      <TextInput
        aria-label="End Day Offset"
        className=""
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        max={24}
        min={1}
        onChange={[Function]}
        type="number"
      />
      <Label>
        Trans(i18nKey=endTime)
      </Label>
      <TextInput
        aria-label="End Time"
        className=""
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        onChange={[Function]}
        type="time"
      />
    </InputGroup>
    <InputGroup>
      <Label>
        Trans(i18nKey=rotationEmployee)
      </Label>
      <TypeaheadSelectInput
        aria-label="Employee"
        emptyText="Trans(i18nKey=unassigned)"
        onChange={[Function]}
        optionToStringMap={[Function]}
        optional={true}
        options={
          Array [
            undefined,
            Object {
              "contract": Object {
                "id": 5,
                "maximumMinutesPerDay": 10,
                "maximumMinutesPerMonth": 500,
                "maximumMinutesPerWeek": 70,
                "maximumMinutesPerYear": 6000,
                "name": "Basic Contract",
                "tenantId": 0,
                "version": 0,
              },
              "id": 4,
              "name": "Employee 1",
              "skillProficiencySet": Array [
                Object {
                  "id": 6,
                  "name": "Not Required Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
          ]
        }
      />
    </InputGroup>
  </Form>
</Modal>
`;

exports[`Edit Shift Template Modal should render correctly when opened 1`] = `
<Modal
  actions={
    Array [
      <Button
        aria-label="Close Modal"
        onClick={[MockFunction]}
        variant="tertiary"
      >
        Trans(i18nKey=close)
      </Button>,
      <Button
        aria-label="Save"
        onClick={[Function]}
      >
        Trans(i18nKey=save)
      </Button>,
    ]
  }
  ariaDescribedById=""
  className=""
  hideTitle={false}
  isLarge={false}
  isOpen={true}
  isSmall={true}
  onClose={[MockFunction]}
  showClose={true}
  title="Trans(i18nKey=createShiftTemplate)"
>
  <Form
    id="modal-element"
    key="0"
    onSubmit={[Function]}
  >
    <InputGroup>
      <Label>
        Trans(i18nKey=spot)
      </Label>
      <TypeaheadSelectInput
        aria-label="Spot"
        emptyText="Trans(i18nKey=selectSpot)"
        onChange={[Function]}
        optionToStringMap={[Function]}
        options={
          Array [
            Object {
              "id": 2,
              "name": "Spot",
              "requiredSkillSet": Array [
                Object {
                  "id": 3,
                  "name": "Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
          ]
        }
      />
    </InputGroup>
    <InputGroup>
      <Label>
        Trans(i18nKey=startDayOffset)
      </Label>
      <TextInput
        aria-label="Start Day Offset"
        className=""
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        max={24}
        min={1}
        onChange={[Function]}
        type="number"
      />
      <Label>
        Trans(i18nKey=startTime)
      </Label>
      <TextInput
        aria-label="Start Time"
        className=""
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        onChange={[Function]}
        type="time"
      />
    </InputGroup>
    <InputGroup>
      <Label>
        Trans(i18nKey=endDayOffset)
      </Label>
      <TextInput
        aria-label="End Day Offset"
        className=""
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        max={24}
        min={1}
        onChange={[Function]}
        type="number"
      />
      <Label>
        Trans(i18nKey=endTime)
      </Label>
      <TextInput
        aria-label="End Time"
        className=""
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        onChange={[Function]}
        type="time"
      />
    </InputGroup>
    <InputGroup>
      <Label>
        Trans(i18nKey=rotationEmployee)
      </Label>
      <TypeaheadSelectInput
        aria-label="Employee"
        emptyText="Trans(i18nKey=unassigned)"
        onChange={[Function]}
        optionToStringMap={[Function]}
        optional={true}
        options={
          Array [
            undefined,
            Object {
              "contract": Object {
                "id": 5,
                "maximumMinutesPerDay": 10,
                "maximumMinutesPerMonth": 500,
                "maximumMinutesPerWeek": 70,
                "maximumMinutesPerYear": 6000,
                "name": "Basic Contract",
                "tenantId": 0,
                "version": 0,
              },
              "id": 4,
              "name": "Employee 1",
              "skillProficiencySet": Array [
                Object {
                  "id": 6,
                  "name": "Not Required Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
          ]
        }
      />
    </InputGroup>
  </Form>
</Modal>
`;

exports[`Edit Shift Template Modal should render correctly with a shift template when opened 1`] = `
<Modal
  actions={
    Array [
      <Button
        aria-label="Close Modal"
        onClick={[MockFunction]}
        variant="tertiary"
      >
        Trans(i18nKey=close)
      </Button>,
      <Button
        aria-label="Delete"
        onClick={[Function]}
        variant="danger"
      >
        Trans(i18nKey=delete)
      </Button>,
      <Button
        aria-label="Save"
        onClick={[Function]}
      >
        Trans(i18nKey=save)
      </Button>,
    ]
  }
  ariaDescribedById=""
  className=""
  hideTitle={false}
  isLarge={false}
  isOpen={true}
  isSmall={true}
  onClose={[MockFunction]}
  showClose={true}
  title="Trans(i18nKey=editShiftTemplate)"
>
  <Form
    id="modal-element"
    key="0"
    onSubmit={[Function]}
  >
    <InputGroup>
      <Label>
        Trans(i18nKey=spot)
      </Label>
      <TypeaheadSelectInput
        aria-label="Spot"
        emptyText="Trans(i18nKey=selectSpot)"
        onChange={[Function]}
        optionToStringMap={[Function]}
        options={
          Array [
            Object {
              "id": 2,
              "name": "Spot",
              "requiredSkillSet": Array [
                Object {
                  "id": 3,
                  "name": "Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
          ]
        }
        value={
          Object {
            "id": 2,
            "name": "Spot",
            "requiredSkillSet": Array [
              Object {
                "id": 3,
                "name": "Skill",
                "tenantId": 0,
                "version": 0,
              },
            ],
            "tenantId": 0,
            "version": 0,
          }
        }
      />
    </InputGroup>
    <InputGroup>
      <Label>
        Trans(i18nKey=startDayOffset)
      </Label>
      <TextInput
        aria-label="Start Day Offset"
        className=""
        defaultValue="2"
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        max={24}
        min={1}
        onChange={[Function]}
        type="number"
      />
      <Label>
        Trans(i18nKey=startTime)
      </Label>
      <TextInput
        aria-label="Start Time"
        className=""
        defaultValue="09:00"
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        onChange={[Function]}
        type="time"
      />
    </InputGroup>
    <InputGroup>
      <Label>
        Trans(i18nKey=endDayOffset)
      </Label>
      <TextInput
        aria-label="End Day Offset"
        className=""
        defaultValue="2"
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        max={24}
        min={1}
        onChange={[Function]}
        type="number"
      />
      <Label>
        Trans(i18nKey=endTime)
      </Label>
      <TextInput
        aria-label="End Time"
        className=""
        defaultValue="17:00"
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        onChange={[Function]}
        type="time"
      />
    </InputGroup>
    <InputGroup>
      <Label>
        Trans(i18nKey=rotationEmployee)
      </Label>
      <TypeaheadSelectInput
        aria-label="Employee"
        emptyText="Trans(i18nKey=unassigned)"
        onChange={[Function]}
        optionToStringMap={[Function]}
        optional={true}
        options={
          Array [
            undefined,
            Object {
              "contract": Object {
                "id": 5,
                "maximumMinutesPerDay": 10,
                "maximumMinutesPerMonth": 500,
                "maximumMinutesPerWeek": 70,
                "maximumMinutesPerYear": 6000,
                "name": "Basic Contract",
                "tenantId": 0,
                "version": 0,
              },
              "id": 4,
              "name": "Employee 1",
              "skillProficiencySet": Array [
                Object {
                  "id": 6,
                  "name": "Not Required Skill",
                  "tenantId": 0,
                  "version": 0,
                },
              ],
              "tenantId": 0,
              "version": 0,
            },
          ]
        }
        value={
          Object {
            "contract": Object {
              "id": 5,
              "maximumMinutesPerDay": 10,
              "maximumMinutesPerMonth": 500,
              "maximumMinutesPerWeek": 70,
              "maximumMinutesPerYear": 6000,
              "name": "Basic Contract",
              "tenantId": 0,
              "version": 0,
            },
            "id": 4,
            "name": "Employee 1",
            "skillProficiencySet": Array [
              Object {
                "id": 6,
                "name": "Not Required Skill",
                "tenantId": 0,
                "version": 0,
              },
            ],
            "tenantId": 0,
            "version": 0,
          }
        }
      />
    </InputGroup>
  </Form>
</Modal>
`;
