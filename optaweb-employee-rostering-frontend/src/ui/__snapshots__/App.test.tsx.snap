// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App clicking the nav button should show the sidebar 1`] = `
<Page
  breadcrumb={null}
  className=""
  defaultManagedSidebarIsOpen={true}
  header={
    <Header
      onNavToggle={[Function]}
    />
  }
  isManagedSidebar={false}
  mainContainerId={null}
  onPageResize={[Function]}
  sidebar={
    <PageSidebar
      isNavOpen={true}
      nav={
        <Memo(Connect(withRouter(Navigation)))
          variant="default"
        />
      }
    />
  }
  skipToContent={null}
>
  <Background />
  <PageSection
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
        "height": "100%",
        "overflowY": "auto",
        "position": "relative",
      }
    }
  >
    <Connect(Alerts) />
    <Switch>
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/skills"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/spots"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/contracts"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/employees"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/shift"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/availability"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/rotation"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(withRouter(AdminPage))",
            "type": [Function],
          }
        }
        exact={true}
        path="/admin"
      />
    </Switch>
  </PageSection>
</Page>
`;

exports[`App clicking the nav button twice should hide the sidebar 1`] = `
<Page
  breadcrumb={null}
  className=""
  defaultManagedSidebarIsOpen={true}
  header={
    <Header
      onNavToggle={[Function]}
    />
  }
  isManagedSidebar={false}
  mainContainerId={null}
  onPageResize={[Function]}
  sidebar={
    <PageSidebar
      isNavOpen={false}
      nav={
        <Memo(Connect(withRouter(Navigation)))
          variant="default"
        />
      }
    />
  }
  skipToContent={null}
>
  <Background />
  <PageSection
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
        "height": "100%",
        "overflowY": "auto",
        "position": "relative",
      }
    }
  >
    <Connect(Alerts) />
    <Switch>
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/skills"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/spots"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/contracts"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/employees"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/shift"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/availability"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/rotation"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(withRouter(AdminPage))",
            "type": [Function],
          }
        }
        exact={true}
        path="/admin"
      />
    </Switch>
  </PageSection>
</Page>
`;

exports[`App should render correctly on a desktop 1`] = `
<Page
  breadcrumb={null}
  className=""
  defaultManagedSidebarIsOpen={true}
  header={
    <Header
      onNavToggle={[Function]}
    />
  }
  isManagedSidebar={false}
  mainContainerId={null}
  onPageResize={[Function]}
  sidebar={
    <PageSidebar
      isNavOpen={false}
      nav={
        <Memo(Connect(withRouter(Navigation)))
          variant="default"
        />
      }
    />
  }
  skipToContent={null}
>
  <Background />
  <PageSection
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
        "height": "100%",
        "overflowY": "auto",
        "position": "relative",
      }
    }
  >
    <Connect(Alerts) />
    <Switch>
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/skills"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/spots"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/contracts"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/employees"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/shift"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/availability"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/rotation"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(withRouter(AdminPage))",
            "type": [Function],
          }
        }
        exact={true}
        path="/admin"
      />
    </Switch>
  </PageSection>
</Page>
`;

exports[`App should render correctly on a mobile 1`] = `
<Page
  breadcrumb={null}
  className=""
  defaultManagedSidebarIsOpen={true}
  header={
    <Header
      onNavToggle={[Function]}
    />
  }
  isManagedSidebar={false}
  mainContainerId={null}
  onPageResize={[Function]}
  sidebar={
    <PageSidebar
      isNavOpen={false}
      nav={
        <Memo(Connect(withRouter(Navigation)))
          variant="default"
        />
      }
    />
  }
  skipToContent={null}
>
  <Background />
  <PageSection
    style={
      Object {
        "display": "flex",
        "flexDirection": "column",
        "height": "100%",
        "overflowY": "auto",
        "position": "relative",
      }
    }
  >
    <Connect(Alerts) />
    <Switch>
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/skills"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/spots"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/contracts"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/employees"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/shift"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/availability"
      />
      <Route
        component={[Function]}
        exact={true}
        path="/:tenantId/rotation"
      />
      <Route
        component={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(withRouter(AdminPage))",
            "type": [Function],
          }
        }
        exact={true}
        path="/admin"
      />
    </Switch>
  </PageSection>
</Page>
`;
