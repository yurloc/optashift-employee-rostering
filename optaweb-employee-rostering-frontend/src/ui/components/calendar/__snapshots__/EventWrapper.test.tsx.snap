// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EventWrapper should render correctly when the event continues both before and after 1`] = `
<div
  className="class continues-from-previous-day continues-next-day"
  style={
    Object {
      "backgroundColor": "transparent",
      "border": "none",
      "color": "white",
      "height": "100%",
      "top": "0%",
    }
  }
>
  <Popover
    appendTo={[Function]}
    aria-label=""
    bodyContent="Body"
    boundary="window"
    className=""
    closeBtnAriaLabel="Close"
    distance={25}
    enableFlip={true}
    flipBehavior={
      Array [
        "top",
        "right",
        "bottom",
        "left",
        "top",
        "right",
        "bottom",
      ]
    }
    footerContent={null}
    headerContent="Title"
    hideOnOutsideClick={true}
    isVisible={null}
    maxWidth="calc(2rem + 18.75rem)"
    onHidden={[Function]}
    onHide={[Function]}
    onMount={[Function]}
    onShow={[Function]}
    onShown={[Function]}
    position="right"
    shouldClose={[Function]}
    zIndex={9999}
  >
    <div />
  </Popover>
</div>
`;

exports[`EventWrapper should render correctly when the event continues from eariler 1`] = `
<div
  className="class continues-from-previous-day"
  style={
    Object {
      "backgroundColor": "transparent",
      "border": "none",
      "color": "white",
      "height": "25%",
      "top": "0%",
    }
  }
>
  <Popover
    appendTo={[Function]}
    aria-label=""
    bodyContent="Body"
    boundary="window"
    className=""
    closeBtnAriaLabel="Close"
    distance={25}
    enableFlip={true}
    flipBehavior={
      Array [
        "top",
        "right",
        "bottom",
        "left",
        "top",
        "right",
        "bottom",
      ]
    }
    footerContent={null}
    headerContent="Title"
    hideOnOutsideClick={true}
    isVisible={null}
    maxWidth="calc(2rem + 18.75rem)"
    onHidden={[Function]}
    onHide={[Function]}
    onMount={[Function]}
    onShow={[Function]}
    onShown={[Function]}
    position="right"
    shouldClose={[Function]}
    zIndex={9999}
  >
    <div />
  </Popover>
</div>
`;

exports[`EventWrapper should render correctly when the event continues later 1`] = `
<div
  className="class continues-next-day"
  style={
    Object {
      "backgroundColor": "transparent",
      "border": "none",
      "color": "white",
      "height": "25%",
      "top": "75%",
    }
  }
>
  <Popover
    appendTo={[Function]}
    aria-label=""
    bodyContent="Body"
    boundary="window"
    className=""
    closeBtnAriaLabel="Close"
    distance={25}
    enableFlip={true}
    flipBehavior={
      Array [
        "top",
        "right",
        "bottom",
        "left",
        "top",
        "right",
        "bottom",
      ]
    }
    footerContent={null}
    headerContent="Title"
    hideOnOutsideClick={true}
    isVisible={null}
    maxWidth="calc(2rem + 18.75rem)"
    onHidden={[Function]}
    onHide={[Function]}
    onMount={[Function]}
    onShow={[Function]}
    onShown={[Function]}
    position="right"
    shouldClose={[Function]}
    zIndex={9999}
  >
    <div />
  </Popover>
</div>
`;

exports[`EventWrapper should render correctly when the event does not have a class name 1`] = `
<div
  className=""
  style={
    Object {
      "backgroundColor": "transparent",
      "border": "none",
      "color": "white",
      "height": "25%",
      "top": "50%",
    }
  }
>
  <Popover
    appendTo={[Function]}
    aria-label=""
    bodyContent="Body"
    boundary="window"
    className=""
    closeBtnAriaLabel="Close"
    distance={25}
    enableFlip={true}
    flipBehavior={
      Array [
        "top",
        "right",
        "bottom",
        "left",
        "top",
        "right",
        "bottom",
      ]
    }
    footerContent={null}
    headerContent="Title"
    hideOnOutsideClick={true}
    isVisible={null}
    maxWidth="calc(2rem + 18.75rem)"
    onHidden={[Function]}
    onHide={[Function]}
    onMount={[Function]}
    onShow={[Function]}
    onShown={[Function]}
    position="right"
    shouldClose={[Function]}
    zIndex={9999}
  >
    <div />
  </Popover>
</div>
`;

exports[`EventWrapper should render correctly when the event does not span multiple days 1`] = `
<div
  className="class"
  style={
    Object {
      "backgroundColor": "transparent",
      "border": "none",
      "color": "white",
      "height": "25%",
      "top": "50%",
    }
  }
>
  <Popover
    appendTo={[Function]}
    aria-label=""
    bodyContent="Body"
    boundary="window"
    className=""
    closeBtnAriaLabel="Close"
    distance={25}
    enableFlip={true}
    flipBehavior={
      Array [
        "top",
        "right",
        "bottom",
        "left",
        "top",
        "right",
        "bottom",
      ]
    }
    footerContent={null}
    headerContent="Title"
    hideOnOutsideClick={true}
    isVisible={null}
    maxWidth="calc(2rem + 18.75rem)"
    onHidden={[Function]}
    onHide={[Function]}
    onMount={[Function]}
    onShow={[Function]}
    onShown={[Function]}
    position="right"
    shouldClose={[Function]}
    zIndex={9999}
  >
    <div />
  </Popover>
</div>
`;

exports[`EventWrapper should render correctly when the event has no height or top 1`] = `
<div
  className="class"
  style={
    Object {
      "backgroundColor": "transparent",
      "border": "none",
      "color": "white",
    }
  }
>
  <Popover
    appendTo={[Function]}
    aria-label=""
    bodyContent="Body"
    boundary="window"
    className=""
    closeBtnAriaLabel="Close"
    distance={25}
    enableFlip={true}
    flipBehavior={
      Array [
        "top",
        "right",
        "bottom",
        "left",
        "top",
        "right",
        "bottom",
      ]
    }
    footerContent={null}
    headerContent="Title"
    hideOnOutsideClick={true}
    isVisible={null}
    maxWidth="calc(2rem + 18.75rem)"
    onHidden={[Function]}
    onHide={[Function]}
    onMount={[Function]}
    onShow={[Function]}
    onShown={[Function]}
    position="right"
    shouldClose={[Function]}
    zIndex={9999}
  >
    <div />
  </Popover>
</div>
`;

exports[`EventWrapper should render correctly without a style 1`] = `
<div
  className="class"
  style={
    Object {
      "backgroundColor": "transparent",
      "border": "none",
    }
  }
>
  <Popover
    appendTo={[Function]}
    aria-label=""
    bodyContent="Body"
    boundary="window"
    className=""
    closeBtnAriaLabel="Close"
    distance={25}
    enableFlip={true}
    flipBehavior={
      Array [
        "top",
        "right",
        "bottom",
        "left",
        "top",
        "right",
        "bottom",
      ]
    }
    footerContent={null}
    headerContent="Title"
    hideOnOutsideClick={true}
    isVisible={null}
    maxWidth="calc(2rem + 18.75rem)"
    onHidden={[Function]}
    onHide={[Function]}
    onMount={[Function]}
    onShow={[Function]}
    onShown={[Function]}
    position="right"
    shouldClose={[Function]}
    zIndex={9999}
  >
    <div />
  </Popover>
</div>
`;
